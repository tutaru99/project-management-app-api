openapi: 3.0.0
info:
  title: Project Management Application API
  description: MongoDB ExpressJS NodeJS REST API for the project management application
  version: 1.0.0
servers:
  - url: http://localhost:3000/api/ # Local webserver location
    description: Localhost Development Server
  - url: https://project-management-app-api.herokuapp.com/api/ # Live webserver location
    description: Live Development Server
components:
  securitySchemes:
    ApiKeyAuth:
      type: http
      scheme: bearer
      in: header
      name: auth-token

  schemas:
    Project:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        completed:
          type: boolean
        columns:
          type: object
          properties:
            col_name:
              type: string
            tasks:
              type: object
              properties:
                task_name:
                  type: string
                task_description:
                  type: string
                task_time:
                  type: number
                task_state:
                  type: string
                task_priority:
                  type: string
                asignee:
                  type: object
                  properties:
                owner:
                  type: object
                  properties:
                users:
                  type: object
                  properties:
                userRoles:
                  type: object
                  properties:
                    role:
                      type: string

    User:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
tags:
- name: "Access"
  description: "Operations regarding Access of the Project Management Application"
  externalDocs:
    description: "Front-End"
    url: "https://sn-project-management-app.herokuapp.com"
- name: "Project"
  description: "Operations regarding Projects"
- name: "List"
  description: "Operations regarding Lists (Columns)"
- name: "Task"
  description: "Operations regarding Tasks"

paths:

  /user/register:
    post:
      tags:
      - "Access"
      summary: Register a new User
      description: Register a new User in the database
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        201:
          description: User created succesfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /user/login:
    post:
      tags:
      - "Access"
      summary: Login with existing User
      description: Login a User in order to get JWT token (auth-token)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: User logged in succesfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  data:
                    type: string


  /projects:
    get:
      tags:
      - "Project"
      summary: Retrieves a list of Projects created and associated to the account
      description: Retrieves a list of projects as JSON objects.
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: A list of projects JSON objects in an array.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Project"

    post:
      tags:
      - "Project"
      summary: Create a new Project
      description: Create a new Project
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                user:
                  type: string
                completed:
                  type: boolean
                columns:
                  type: object
                  properties:
                    col_name:
                      type: string
                    tasks:
                      type: object
                      properties:
                        task_name:
                          type: string
                        task_description:
                          type: string
                        task_time:
                          type: number
                        task_state:
                          type: string
                        task_priority:
                          type: string
      responses:
        201:
          description: Project created succesfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"

  /projects/{id}:
    get:
      tags:
      - "Project"
      summary: GET Specific Project
      description: Retrieve a specific Project based on its ID.
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: MongoDB Project ObjectId
          schema:
            type: string
      responses:
        200:
          description: A Project in the format of a JSON object.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Project"

    put:
      tags:
      - "Project"
      summary: Updates a specific Project
      description: Updates a specific Project based on its ID.
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: MongoDB Project ObjectId
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Project"
      responses:
        201:
          description: Project updated succesfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"

    delete:
      tags:
      - "Project"
      summary: Deletes a specific Project
      description: Deletes a specific Project based on its ObjectId.
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: MongoDB Project ObjectId
          schema:
            type: string
      responses:
        201:
          description: Project deleted succesfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
  /projects/:
    delete:
      tags:
      - "Project"
      summary: Delete ALL PROJECTS from DB
      description: Delete ALL PROJECTS from DB
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: A Project in the format of a JSON object.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Project"
      security:
      deprecated: true

  /projects/completed:
    get:
      tags:
      - "Project"
      summary: GET PROJECTS from DB that are completed
      description: GET PROJECTS from DB are completed
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: A Project in the format of a JSON object.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Project"
      security:
      deprecated: true

  /projects/addcolumn/{id}:
      put:
        tags:
        - "List"
        summary: Add New LIST by Project ID
        description: Add New LIST by Project ID
        security:
          - ApiKeyAuth: []
        parameters:
          - in: path
            name: id
            required: true
            description: MongoDB Project ObjectId
            schema:
              type: string
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  col_name:
                    type: string
        responses:
          200:
            description: A Project in the format of a JSON object.
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: "#/components/schemas/Project"

  /projects/editcolumn/{id}:
      put:
        tags:
        - "List"
        summary: EDIT LIST by Column ID
        description: EDIT LIST by Column ID
        security:
          - ApiKeyAuth: []
        parameters:
          - in: path
            name: id
            required: true
            description: MongoDB Column ObjectId
            schema:
              type: string
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  col_name:
                    type: string
        responses:
          200:
            description: A Project in the format of a JSON object.
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: "#/components/schemas/Project"

  /projects/deletecolumn/{id}:
    put:
      tags:
      - "List"
      summary: Delete Specific card LIST in Project
      description: Delete Specific card LIST in Project by Column ID.
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: MongoDB LIST ObjectId
          schema:
            type: string
      responses:
        200:
          description: A Project in the format of a JSON object.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Project"

  /projects/addtask/{id}:
    put:
      tags:
      - "Task"
      summary: Add New Task inside List by ID
      description: Add New Task into LIST in Project by Column ID.
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: MongoDB columns ObjectId
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                task_name:
                  type: string
                task_description:
                  type: string
      responses:
        200:
          description: A Project in the format of a JSON object.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Project"

  /projects/updatetask-quick-edit/{id}:
      put:
        tags:
        - "Task"
        summary: Update TASK by ID
        description: Update Task by TASK ID.
        security:
          - ApiKeyAuth: []
        parameters:
          - in: path
            name: id
            required: true
            description: MongoDB Task ObjectId
            schema:
              type: string
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  task_name:
                    type: string
                  task_description:
                    type: string
        responses:
          200:
            description: A Project in the format of a JSON object.
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: "#/components/schemas/Project"

  /projects/movetask/{id}/{id2}:
      put:
        tags:
        - "Task"
        summary: Move Task to a different Column
        description: Move Task to a different Column
        security:
          - ApiKeyAuth: []
        parameters:
          - in: path
            name: id
            required: true
            description: MongoDB Task ObjectId
            schema:
              type: string
          - in: path
            name: id2
            required: true
            description: MongoDB Column ObjectId
            schema:
              type: string
        responses:
          200:
            description: A Project in the format of a JSON object.
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: "#/components/schemas/Project"

  /projects/deletetask/{id}:
    put:
      tags:
      - "Task"
      summary: Delete Specific TASK inside LIST in Project
      description: Delete Specific TASK inside LIST in Project by TASK ID.
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: MongoDB TASK ObjectId
          schema:
            type: string
      responses:
        200:
          description: A Project in the format of a JSON object.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Project"
